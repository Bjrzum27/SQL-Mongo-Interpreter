"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildProjection=m;const c=require("../compileValueExpression"),d=require("../mapColumnToPath");function m(l){var r;let u=!1;const n={},p=l.columns,f=l.from.alias||l.from.name,t={};for(const o of p){if(o.type==="Wildcard"){const e=o;!e.source||e.source===f?u=!0:n[e.source]=1;continue}if(o.type==="AliasedExpression"){const e=o;n[e.alias]=(0,c.compileValueExpression)(e.expression,l);continue}if(o.type==="ColumnRef"){const e=o,i=e.alias||e.name.split(".").slice(-1)[0],s=(0,c.compileValueExpression)(e,l);if(s!=null&&(n[i]=s),!(!((r=e.traversal)===null||r===void 0)&&r.length)){const a=(0,d.mapColumnToPath)(e,l);a&&e.alias&&e.alias!==a.split(".").slice(-1)[0]&&(t[a]=i)}}}if(u){const o={};let e=!1;for(const i of p)if(i.type==="AliasedExpression"){const s=i.alias;o[s]=(0,c.compileValueExpression)(i.expression,l),e=!0}else if(i.type==="ColumnRef"&&i.alias){const s=(0,c.compileValueExpression)(i,l);s!=null&&(o[i.alias]=s,e=!0)}return e?{project:Object.keys(o).length?o:void 0,pathToAlias:t,includeAllBase:!0}:{project:void 0,pathToAlias:t,includeAllBase:!0}}return Object.keys(n).length||(n._id=1),{project:n,pathToAlias:t}}
