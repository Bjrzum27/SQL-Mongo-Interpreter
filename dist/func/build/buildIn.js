"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildIn=h;const o=require("../compileValueExpression"),V=require("../mapColumnToPath"),c=require("../normalizeLiteral");function h(e,t){var a;if(e.lookupAlias){if(!t)return{};const r=(0,o.compileValueExpression)(e.left,t);if(r==null)return{};const f={$map:{input:{$ifNull:[`$${e.lookupAlias}`,[]]},as:"corr",in:e.lookupValueField?`$$corr.${e.lookupValueField}`:"$$corr"}},n={$in:[r,f]};return{$expr:e.not?{$not:[n]}:n}}if(e.subquerySql)throw new Error("Las subconsultas IN deben resolverse antes de compilar");if(t){const r=e.values.map(l=>(0,o.compileValueExpression)(l,t)).filter(l=>l!=null),n=r.length===1&&e.values.length===1&&e.values[0].type!=="Literal"?r[0]:r;if(!r.length)return e.resolvedFromSubquery?e.not?{}:{$expr:{$eq:[1,0]}}:{};if(e.left.type==="ColumnRef"){const l=e.left,u=(0,V.mapColumnToPath)(l,t),E=!!(!((a=l.traversal)===null||a===void 0)&&a.length),v=e.values.every(i=>i.type==="Literal");if(!(E||!u||/\.(label|value)$/.test(u)||!v)){const i=e.values.map(y=>(0,c.literalNodeValue)(y));return e.not?{[u]:{$nin:i}}:{[u]:{$in:i}}}let s=(0,o.compileValueExpression)(l,t);if(s==null)return{};e.values.every(i=>i.type==="Literal"&&typeof(0,c.literalNodeValue)(i)=="string")&&(s={$convert:{input:s,to:"string",onError:null,onNull:null}});const m={$in:[s,n]};return{$expr:e.not?{$not:[m]}:m}}const $=(0,o.compileValueExpression)(e.left,t);if($==null)return{};const x={$in:[$,n]};return{$expr:e.not?{$not:[x]}:x}}const p=e.values.filter(r=>r.type==="Literal").map(r=>(0,c.literalNodeValue)(r));if(!p.length)return e.resolvedFromSubquery?e.not?{}:{$expr:{$eq:[1,0]}}:{};if(e.left.type==="ColumnRef"){const r=e.left.name.split(".").slice(-1)[0];return e.not?{[r]:{$nin:p}}:{[r]:{$in:p}}}return{}}
