"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildBetween=f;const c=require("../mapColumnToPath"),o=require("../compileValueExpression"),n=require("../normalizeLiteral");function f(e,r){if(e.value.type==="ColumnRef"&&e.lower.type==="Literal"&&e.upper.type==="Literal"){const t=r?(0,c.mapColumnToPath)(e.value,r):e.value.name.split(".").slice(-1)[0];if(!t)return{};const s=(0,n.literalNodeValue)(e.lower),a=(0,n.literalNodeValue)(e.upper),$={[t]:{$gte:s,$lte:a}};return e.not?{$or:[{[t]:{$lt:s}},{[t]:{$gt:a}}]}:$}if(!r)return{};const u=(0,o.compileValueExpression)(e.value,r);let l=(0,o.compileValueExpression)(e.lower,r),i=(0,o.compileValueExpression)(e.upper,r);const p=t=>typeof t=="string"&&!t.startsWith("$$")&&!t.startsWith("$")&&/^(\d{4}-\d{2}-\d{2})(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d{1,3})?(?:Z|[+\-]\d{2}:\d{2})?)?$/.test(t);return p(l)&&(l={$toDate:l}),p(i)&&(i={$toDate:i}),e.not?{$expr:{$or:[{$lt:[u,l]},{$gt:[u,i]}]}}:{$expr:{$and:[{$gte:[u,l]},{$lte:[u,i]}]}}}
