"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.normalizeLiteralValue=m,exports.literalNodeValue=f;const n=require("bson");function m(e){if(e==null||typeof e!="string")return e;const t=e.trim();if(!t)return e;const i=t.match(/^ObjectId\((['"]?)([0-9a-fA-F]{24})\1\)$/i);if(i)try{return new n.ObjectId(i[2])}catch{}const a=t.match(/^ISODate\((['"])(.+)\1\)$/i);if(a){const r=new Date(a[2]);if(!Number.isNaN(r.getTime()))return r}const c=t.match(/^NumberDecimal\((['"])(.+)\1\)$/i);if(c)try{return n.Decimal128.fromString(c[2])}catch{}const u=t.match(/^NumberLong\((['"]?)(-?\d+)\1\)$/i);if(u)try{return n.Long.fromString(u[2])}catch{}const o=t.match(/^NumberInt\((['"]?)(-?\d+)\1\)$/i);if(o){const r=Number.parseInt(o[2],10);if(!Number.isNaN(r))return r}const s=t.match(/^NumberDouble\((['"]?)(-?\d+(?:\.\d+)?)\1\)$/i);if(s){const r=Number.parseFloat(s[2]);if(!Number.isNaN(r))return r}if(t.startsWith("{")&&t.endsWith("}")||t.startsWith("[")&&t.endsWith("]"))try{return n.EJSON.parse(t)}catch{}return e}function f(e){return m(e.value)}
