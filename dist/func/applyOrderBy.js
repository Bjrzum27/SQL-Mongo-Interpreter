"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.applyOrderBy=j;const h=require("./compileValueExpression"),y=require("./mapColumnToPath"),_=require("./finalProjectionFields");function j(t,r,d){var p,f;if(!(!((p=t.orderBy)===null||p===void 0)&&p.length))return;const m={},l={},i=[];let a=0;for(const c of t.orderBy){const s=c.expression;let o;if(s.type==="ColumnRef"){const e=s;if(!((f=e.traversal)===null||f===void 0)&&f.length){const n="__ord"+a++;l[n]=(0,h.compileValueExpression)(e,t),o=n,i.push(n)}else{const n=e.name,u=(0,y.mapColumnToPath)(e,t);u?d&&d[u]?o=d[u]:o=u:n.includes(".")||(o=n)}}else if(s.type==="FunctionCall"||s.type==="ArithmeticOp"||s.type==="CaseExpression"){const e="__ord"+a++;l[e]=(0,h.compileValueExpression)(s,t),o=e,i.push(e)}else{const e="__ord"+a++;l[e]=(0,h.compileValueExpression)(s,t),o=e,i.push(e)}o&&(m[o]=c.direction==="ASC"?1:-1)}if(Object.keys(l).length&&r.push({$addFields:l}),Object.keys(m).length&&r.push({$sort:m}),i.length){const c=(0,_.finalProjectionFields)(r);Object.keys(c).length?r.push({$project:{...c}}):r.push({$unset:i})}}
