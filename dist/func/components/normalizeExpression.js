"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.normalizeExpression=t;const s=require("../normalizeLiteral");function t(r){switch(r.type){case"ColumnRef":{const e=r;return{type:"ColumnRef",name:e.name,traversal:e.traversal?[...e.traversal]:void 0}}case"Literal":return{type:"Literal",value:(0,s.literalNodeValue)(r)};case"ArithmeticOp":{const e=r;return{type:"ArithmeticOp",operator:e.operator,left:t(e.left),right:t(e.right)}}case"BinaryOp":{const e=r;return{type:"BinaryOp",operator:e.operator,left:t(e.left),right:t(e.right)}}case"FunctionCall":{const e=r;return{type:"FunctionCall",name:e.name,distinct:!!e.distinct,wildcard:!!e.wildcard,args:e.args.map(t)}}case"CaseExpression":{const e=r;return{type:"CaseExpression",branches:e.branches.map(n=>({when:t(n.when),then:t(n.then)})),else:e.else?t(e.else):null}}case"ParenExpression":return{type:"ParenExpression",expression:t(r.expression)};case"LikeExpression":{const e=r;return{type:"LikeExpression",value:t(e.value),pattern:t(e.pattern),not:!!e.not}}case"InExpression":{const e=r;return{type:"InExpression",left:t(e.left),values:e.values.map(t),not:!!e.not}}case"BetweenExpression":{const e=r;return{type:"BetweenExpression",value:t(e.value),lower:t(e.lower),upper:t(e.upper),not:!!e.not}}case"ArrayExpression":return{type:"ArrayExpression",elements:r.elements.map(t)};case"ScalarSubquery":{const e=r;return{type:"ScalarSubquery",lookupAlias:e.lookupAlias||null,valueField:e.valueField||null,resolved:!!e.resolved,hasSql:!!e.subquerySql}}default:return{type:r.type}}}
